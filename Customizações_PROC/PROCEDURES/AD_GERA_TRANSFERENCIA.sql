CREATE OR REPLACE PROCEDURE       "AD_GERA_TRANSFERENCIA" (
       P_CODUSU NUMBER,        -- Codigo do usuario logado
       P_IDSESSAO VARCHAR2,    -- Identificador da execuc?o. Serve para buscar informac?es dos parametros/campos da execuc?o.
       P_QTDLINHAS NUMBER,     -- Informa a quantidade de registros selecionados no momento da execuc?o.
       P_MENSAGEM OUT VARCHAR2 -- Caso seja passada uma mensagem aqui, ela sera exibida como uma informac?o ao usuario.
) AS
	FIELD_NUNOTA NUMBER;
      
	V_CODPROD NUMBER;
	V_NUNOTA NUMBER;
	V_QTDNEG NUMBER;
	V_NROITENS INT;
	V_CONTROLE VARCHAR2(50);
	V_LOCAL NUMBER;
	V_CODVOL VARCHAR(5);
	V_TRANF INT := 0;
	V_CODEMP NUMBER;
	V_USUINC NUMBER;
	V_CODPARC NUMBER;
	V_QTDTRANSF NUMBER;
	V_SEQ INT := 0;
	V_USOPROD VARCHAR2(2);
	V_TEMEST VARCHAR2(1);
	V_QTDDISPONIVEL NUMBER;
	C_TABPRO INT;
	C_PROD INT;
	V_DTVAL DATE;
	C_EST INT;

BEGIN
		
	FOR I IN 1..P_QTDLINHAS
	LOOP
		FIELD_NUNOTA := ACT_INT_FIELD(P_IDSESSAO, I, 'NUNOTA');

		SELECT COUNT(CODPROD) INTO V_NROITENS FROM TGFITE WHERE NUNOTA = FIELD_NUNOTA;
		SELECT CODEMP INTO V_CODEMP FROM TGFCAB WHERE NUNOTA = FIELD_NUNOTA;
		SELECT CODUSUINC INTO V_USUINC FROM TGFCAB WHERE NUNOTA = FIELD_NUNOTA;
		SELECT CODPARC INTO V_CODPARC FROM TSIEMP WHERE CODEMP = V_CODEMP;
		
		BEGIN
			FOR J IN 1..V_NROITENS
			LOOP
				SELECT CODPROD INTO V_CODPROD FROM TGFITE WHERE NUNOTA = FIELD_NUNOTA AND SEQUENCIA = J;
				SELECT CODVOL INTO V_CODVOL FROM TGFITE WHERE NUNOTA = FIELD_NUNOTA AND CODPROD = V_CODPROD;
				SELECT CODLOCALORIG INTO V_LOCAL FROM TGFITE WHERE NUNOTA = FIELD_NUNOTA AND CODPROD = V_CODPROD;
				SELECT QTDNEG INTO V_QTDNEG FROM TGFITE WHERE NUNOTA = FIELD_NUNOTA AND CODPROD = V_CODPROD;
				SELECT MIN(DTVAL) INTO V_DTVAL FROM TGFEST WHERE CODPROD = V_CODPROD AND CODEMP = 1 AND ESTOQUE >= V_QTDNEG;
				SELECT MIN(CONTROLE) INTO V_CONTROLE FROM TGFEST WHERE CODPROD = V_CODPROD AND DTVAL = V_DTVAL AND CODEMP = 1 AND ESTOQUE >= V_QTDNEG;
				SELECT SUM(ESTOQUE - RESERVADO) INTO V_QTDDISPONIVEL FROM TGFEST WHERE CODPROD = V_CODPROD AND CODEMP = 1 AND CONTROLE = V_CONTROLE;
			
				SELECT COUNT(*) INTO C_PROD FROM AD_TABPROD WHERE CODPROD = V_CODPROD AND CODLOCAL = V_LOCAL;
			
				IF C_PROD > 0 THEN
					UPDATE AD_TABPROD SET QTDPROD = QTDPROD + V_QTDNEG WHERE CODPROD = V_CODPROD AND CODLOCAL = V_LOCAL;
				ELSE
					INSERT INTO AD_TABPROD (CODPROD, CODVOL, CONTROLE, QTDPROD, QTDDISP, CODEMP, CODPARC, CODLOCAL)
						VALUES (V_CODPROD,V_CODVOL,V_CONTROLE,V_QTDNEG, V_QTDDISPONIVEL, V_CODEMP, V_CODPARC, V_LOCAL);
				END IF;
				
			END LOOP;
		END;
		
	END LOOP;

	SELECT NVL(MAX(NUNOTA),0)+1 INTO V_NUNOTA FROM TGFCAB;
	SELECT COUNT(*) INTO C_TABPRO FROM AD_TABPROD;

	IF C_TABPRO > 0 THEN
		INSERT INTO TGFCAB (NUNOTA,NUMNOTA,CODEMP,DTNEG,CODEMPNEGOC,CODPARC,CODTIPOPER,DHTIPOPER,TIPMOV,DTALTER,CODUSUINC)
			VALUES (V_NUNOTA,0,1,SYSDATE,V_CODEMP,V_CODPARC,701,(SELECT MAX(DHALTER) FROM TGFTOP WHERE CODTIPOPER = 701),'T',SYSDATE,V_USUINC);
		
		INSERT INTO TGFITE (NUNOTA,CODPROD,CONTROLE,CODLOCALORIG,CODVOL,QTDNEG,SEQUENCIA,CODEMP,DTALTER)
			SELECT V_NUNOTA,CODPROD,CONTROLE,CODLOCAL,CODVOL,QTDPROD,ROWNUM,1,SYSDATE
			FROM AD_TABPROD;

	END IF;	
	
	DELETE FROM AD_TABPROD;

	P_MENSAGEM := 'GERADO NOTA DE TRANSFERÃŠNCIA NRO: ' || V_NUNOTA || '!';

END;