CREATE OR REPLACE PROCEDURE "AD_NOTIFICA_USUARIO_LIBERACAO" (
       P_TIPOEVENTO INT,    -- Identifica o tipo de evento
       P_IDSESSAO VARCHAR2, -- Identificador da execução. Serve para buscar informações dos campos da execução.
       P_CODUSU INT         -- Código do usuário logado
) AS
       BEFORE_INSERT INT;
       AFTER_INSERT  INT;
       BEFORE_DELETE INT;
       AFTER_DELETE  INT;
       BEFORE_UPDATE INT;
       AFTER_UPDATE  INT;
       BEFORE_COMMIT INT;

        V_LIB NUMBER;
        V_STATUSLIB VARCHAR2(2);
        V_TABELA VARCHAR2(100);
        V_USUSOL NUMBER;

BEGIN
       BEFORE_INSERT := 0;
       AFTER_INSERT  := 1;
       BEFORE_DELETE := 2;
       AFTER_DELETE  := 3;
       BEFORE_UPDATE := 4;
       AFTER_UPDATE  := 5;
       BEFORE_COMMIT := 10;
       
/*******************************************************************************
   É possível obter o valor dos campos através das Functions:
   
  EVP_GET_CAMPO_DTA(P_IDSESSAO, 'NOMECAMPO') -- PARA CAMPOS DE DATA
  EVP_GET_CAMPO_INT(P_IDSESSAO, 'NOMECAMPO') -- PARA CAMPOS NUMÉRICOS INTEIROS
  EVP_GET_CAMPO_DEC(P_IDSESSAO, 'NOMECAMPO') -- PARA CAMPOS NUMÉRICOS DECIMAIS
  EVP_GET_CAMPO_TEXTO(P_IDSESSAO, 'NOMECAMPO')   -- PARA CAMPOS TEXTO
********************************************************************************/

       IF P_TIPOEVENTO = AFTER_UPDATE THEN
              V_LIB := EVP_GET_CAMPO_INT(P_IDSESSAO, 'NUCHAVE');
              V_TABELA := EVP_GET_CAMPO_TEXTO(P_IDSESSAO, 'TABELA');
              SELECT CODUSUSOLICIT INTO V_USUSOL FROM TSILIB WHERE NUCHAVE = V_LIB;
              SELECT (CASE WHEN DHLIB IS NULL THEN 'P' WHEN DHLIB IS NOT NULL AND REPROVADO = 'S' THEN 'R' ELSE 'L' END) INTO V_STATUSLIB FROM TSILIB WHERE NUCHAVE = V_LIB;

              IF V_STATUSLIB <> 'P' THEN
                     IF V_STATUSLIB = 'L' THEN
                            INSERT INTO TSIAVI (NUAVISO, TITULO, DESCRICAO, SOLUCAO, IDENTIFICADOR, IMPORTANCIA, CODUSU, CODGRUPO, TIPO, DHCRIACAO, CODUSUREMETENTE, NUAVISOPAI, DTEXPIRACAO, DTNOTIFICACAO, ORDEM) 
                            VALUES((SELECT MAX(NUAVISO)+1 FROM TSIAVI), 'NOTIFICAÇÃO LIBERAÇÃO LIMITE', 'SOLICITAÇÃO DE LINERAÇÃO DE LIMITE PARA NÚMERO ÚNICO ' || V_LIB || ' APROVADA.', '', 'PERSONALIZADO', 3 , V_USUSOL, NULL, 'P' , SYSDATE , 1 , NULL, '', '', NULL);
                     ELSIF V_STATUSLIB = 'R' THEN
                            INSERT INTO TSIAVI (NUAVISO, TITULO, DESCRICAO, SOLUCAO, IDENTIFICADOR, IMPORTANCIA, CODUSU, CODGRUPO, TIPO, DHCRIACAO, CODUSUREMETENTE, NUAVISOPAI, DTEXPIRACAO, DTNOTIFICACAO, ORDEM) 
                            VALUES((SELECT MAX(NUAVISO)+1 FROM TSIAVI), 'NOTIFICAÇÃO LIBERAÇÃO LIMITE', 'SOLICITAÇÃO DE LINERAÇÃO DE LIMITE PARA NÚMERO ÚNICO ' || V_LIB || ' REPROVADA.', '', 'PERSONALIZADO', 3 , V_USUSOL, NULL, 'P' , SYSDATE , 1 , NULL, '', '', NULL);
                     END IF;
              END IF;
			
       END IF;

END;